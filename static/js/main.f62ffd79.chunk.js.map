{"version":3,"sources":["components/Notification.js","components/BudgetForm.js","components/BudgetItem.js","components/BudgetList.js","components/IncomeForm.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Nofication","type","text","className","BudgetForm","amount","charge","handleAmount","handleCharge","handleSubmit","isEditMode","onSubmit","htmlFor","id","name","placeholder","value","onChange","BudgetItem","expense","editItem","deleteItem","arial-label","onClick","BudgetList","expenses","clearList","handleEditItem","handelDeleteItem","Fragment","map","key","length","IncomeForm","income","handleIncome","initialList","localStorage","getItem","JSON","parse","initialIncome","App","useState","setExpenses","setCharge","setAmount","setIncome","saving","setSaving","show","notification","setNotification","edit","setEdit","setId","totalExpenses","reduce","acc","curr","parseInt","handleNotifcation","setTimeout","useEffect","setItem","stringify","src","logo","style","height","width","verticalAlign","alt","e","target","preventDefault","tempList","item","uuid","find","console","log","filter","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.f62ffd79.chunk.js","sourcesContent":["import React from \"react\"\n\n\nconst Nofication = ({type,text}) =>\n{\n    return (\n        <div className={`alert alert-${type}`}>{text}</div>\n    )\n}\n\nexport default Nofication","import React from \"react\"\nimport { MdSend } from 'react-icons/md'\n\n\n\nconst BudgetForm = ({ amount, charge ,handleAmount, handleCharge, handleSubmit,isEditMode}) =>\n{\n    return(\n        <form onSubmit={handleSubmit}>\n           \n            <div className=\"form-center\">\n         \n                <div className=\"form-group\">\n                    <label htmlFor=\"charge\">Charge</label>\n                    <input type=\"text\"\n                        className=\"form-control\"\n                        id=\"charge\"\n                        name=\"charge\"\n                        placeholder=\"e.g. rent\"\n                        value={charge}\n                        onChange={handleCharge}\n                    \n                     />\n                </div>\n                <div className=\"form-group\">\n                    <label htmlFor=\"Amount\">Amount</label>\n                    <input type=\"number\"\n                        className=\"form-control\"\n                        id=\"amount\"\n                        name=\"amount\"\n                        placeholder=\"e.g. 100\"\n                        value={amount}\n                        onChange={handleAmount}\n                    />\n                </div>\n            </div>\n            <button type=\"submit\" className=\"btn\" >\n                {\n                    isEditMode? \"Edit Item\" : \"Add Item\"\n                }\n              <MdSend className=\"btn-icon\"/>\n            </button>\n        </form>\n    )\n    \n}\n\nexport default BudgetForm\n\n\n\n    ","import React from 'react'\nimport { MdDelete,MdEdit } from 'react-icons/md'\n\nconst BudgetItem = ({ expense, editItem, deleteItem}) =>\n{\n    const {id,charge,amount}= expense\n    return (\n        <li className=\"item\">\n            <div className=\"info\">\n                <span className=\"expense\">{charge}</span>\n                <span className=\"amount\">${amount}</span>\n            </div>\n            <div>\n                <button className=\"edit-btn\" arial-label=\"edit button\" onClick={() => editItem(id)}>\n                  <MdEdit/>\n                </button>\n                <button className=\"clear-btn\" arial-label=\"delete button\" onClick={()=>deleteItem(id)}>\n                  <MdDelete/>\n                </button>\n            </div>\n        </li>\n    )\n}\n\nexport default BudgetItem","import React from 'react'\nimport BudgetItem from './BudgetItem'\nimport {MdDelete} from 'react-icons/md'\n\nconst BudgetList = ({ expenses, clearList, handleEditItem,handelDeleteItem}) => {\n    return (\n        <React.Fragment>\n            <ul className=\"list\">\n                {\n                    expenses.map((expense) => (\n                        <BudgetItem key={expense.id} expense={expense} editItem={handleEditItem} deleteItem={handelDeleteItem} />\n                    ))\n                }\n            </ul>\n            {expenses.length > 0 &&\n                <button className=\"btn\" onClick={clearList}>\n                 clear expenses \n               <MdDelete className=\"btn-icon\"/>\n               </button>\n            }\n       </React.Fragment>\n    )\n}\nexport default BudgetList\n","import React from \"react\"\nimport { MdSend } from 'react-icons/md'\n\n\n\nconst IncomeForm = ({ income, handleIncome, handleSubmit }) =>\n{\n    return (\n        <form onSubmit={handleSubmit}>\n            <div className=\"form-center\">\n                <div className=\"form-group\">\n                    <label htmlFor=\"income\">Income</label>\n                    <input type=\"number\"\n                        className=\"form-control\"\n                        id=\"income\"\n                        name=\"income\"\n                        placeholder=\"e.g. salary\"\n                        value={income}\n                        onChange={handleIncome}\n                    />\n                </div>\n            </div>\n\n            <button type=\"submit\" className=\"btn\" >\n                Add Income\n                <MdSend className=\"btn-icon\" />\n            </button>\n        </form>\n    )\n\n}\n\nexport default IncomeForm\n\n\n\n","import React,{useState,useEffect} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nofication from './components/Notification';\nimport BudgetForm from './components/BudgetForm';\nimport BudgetList from './components/BudgetList';\nimport uuid from 'uuid/v4'\nimport IncomeForm from './components/IncomeForm';\n\n\n\nconst initialList = localStorage.getItem(\"expenses\") ?\n  JSON.parse(localStorage.getItem(\"expenses\")) : []\n\nconst initialIncome = localStorage.getItem(\"income\") ? JSON.parse(localStorage.getItem(\"income\")) : 0\nconst initialSaving= localStorage.getItem(\"saving\") ? JSON.parse(localStorage.getItem(\"saving\")) : 0\n\nfunction App()\n{\n \n  const [expenses, setExpenses] = useState(initialList)\n  const [charge, setCharge] = useState('')\n  const [amount, setAmount] = useState('')\n  const [income, setIncome] = useState(initialIncome)\n  const [saving, setSaving] = useState(0)\n  const [notification, setNotification] = useState({ show: false })\n  const [edit, setEdit] = useState(false)\n  const [id,setId]=useState(0)\n \n  let totalExpenses = expenses.reduce((acc, curr) =>\n  {\n    return acc += parseInt(curr.amount)\n  }, 0)\n  \n  function handleNotifcation()\n  {\n    setTimeout(() =>\n    {\n      setNotification({ show: false })\n    }, 3000)\n  }\n  function handleIncome(e)\n  {\n    return setIncome(e.target.value)\n  }\n\n\n  function handleSaving(e)\n  {\n    e.preventDefault()\n    if (income< 0 || income==\"\")\n    {\n      setNotification({ show: true, type: \"danger\", text: \"Income cannot be less than zero\" })\n      handleNotifcation()\n     \n    }\n    else\n    {\n      if (expenses.length > 0 )\n      {\n      \n        return setSaving(income - totalExpenses)\n      }\n      else\n      {\n        return setSaving(income)\n      }\n    }\n \n  }\n  function handleAmount(e)\n  {\n   \n    return setAmount(e.target.value)\n  }\n  \n  function handleCharge(e)\n  {\n      return setCharge(e.target.value)\n  \n  }\n\n  function handleSubmit(e)\n  {\n    e.preventDefault()\n   \n    if (charge != \"\" && amount > 0)\n    {\n      if (edit)\n      {\n        let tempList = expenses.map(item =>\n        {\n          return item.id == id ? { ...item, charge, amount }:item\n        })\n        setExpenses(tempList)\n      \n        setEdit(false)\n\n\n\n      }\n      else\n      {\n        setExpenses([...expenses, { id: uuid(), charge, amount }])\n       \n        setNotification({ show: true, type: \"success\", text: \"Expense was added\" })\n        handleNotifcation()\n      }\n    \n      setCharge(\"\")\n      setAmount(\"\")\n      setSaving(income - amount)\n    }\n    else\n    {\n      setNotification({ show: true, type: \"danger\", text: \"Please add expense item\" })\n      handleNotifcation()\n    }\n  }\n\n  function handleClearList(e)\n  {\n    setExpenses([])\n    setNotification({ show: true, type: \"success\", text: \"Items deleted\" })\n    handleNotifcation()\n    setEdit(false)\n  }\n\n  function handelDeleteItem(id){\n    let tempList = expenses.filter(item => item.id != id)\n    setExpenses(tempList)\n  }\n   \n  function handleEditItem(id)\n  {\n    let tempList = expenses.find(item => item.id === id)\n    const { amount, charge } = tempList\n    setEdit(true)\n    setCharge(charge)\n    setAmount(amount)\n    setId(id);\n   console.log(tempList)\n  }\n   \n  useEffect(() =>\n  {\n    localStorage.setItem(\"expenses\", JSON.stringify(expenses)) \n    localStorage.setItem(\"income\", JSON.stringify(income))\n    localStorage.setItem(\"saving\", JSON.stringify(saving))\n  }, [expenses,income,saving])\n\n  return (\n    <>\n      {notification.show && <Nofication type={notification.type} text={notification.text} />}\n      <Nofication/>\n      <h1>\n      Budget App\n      <img\n          src={logo}\n          style={{ height: 53, width: 36, verticalAlign:\"bottom\"}}\n          alt=\"website logo\"\n        />  \n      </h1>\n      \n      <main className=\"App\">\n        <IncomeForm\n          income={income}\n          handleIncome={handleIncome}\n          handleSubmit={handleSaving}\n        />\n        <BudgetForm\n          amount={amount}\n          charge={charge}\n          handleAmount={handleAmount}\n          handleCharge={handleCharge}\n          handleSubmit={handleSubmit}\n          isEditMode={edit}\n           />\n        <BudgetList expenses={expenses} clearList={handleClearList} handleEditItem={handleEditItem} handelDeleteItem={handelDeleteItem} />\n      </main>\n      <div className=\"textHolder\">\n        \n          \n        <span className=\"total\">\n          Total spending :{\" \"}\n            ${totalExpenses}\n        </span>\n        <span className=\"total\">Total Saving :{\" \"}${income> 0 ? income-totalExpenses: 0}  </span>\n       \n      </div>\n   \n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.8f2597c7.svg\";"],"sourceRoot":""}