{"ast":null,"code":"var _jsxFileName = \"/Users/Preetee/Desktop/reactApp/MyBudget/mybudget/src/App.js\";\nimport React, { useState } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Nofication from './components/Notification';\nimport BudgetForm from './components/BudgetForm';\nimport BudgetList from './components/BudgetList';\nimport uuid from 'uuid/v4';\nconst initialExpenses = [{\n  id: uuid(),\n  charge: 'rent',\n  amount: 1000\n}, {\n  id: uuid(),\n  charge: 'skySurf',\n  amount: 1300\n}, {\n  id: uuid(),\n  charge: 'diving',\n  amount: 1000\n}];\n\nfunction App() {\n  //useState is a function that take an intialValue and return an array with 2 values\n  //the action value of the state\n  //function to update/controle\n  //default valie\n  const [expenses, setExpenses] = useState(initialExpenses);\n  const [charge, setCharge] = useState('');\n  const [amount, setAmount] = useState('');\n  const [notification, setNotification] = useState({\n    show: false\n  });\n\n  function handleAmount(e) {\n    return setAmount(e.target.value);\n  }\n\n  function handleCharge(e) {\n    return setCharge(e.target.value);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (charge != \"\" && amount > 0) {\n      setExpenses([...expenses, {\n        id: uuid(),\n        charge,\n        amount\n      }]);\n      setCharge(\"\");\n      setAmount(\"\");\n      setNotification({\n        show: true,\n        type: \"success\",\n        text: \"Expense was added\"\n      });\n    } else {\n      setNotification({\n        show: true,\n        type: \"danger\",\n        text: \"error\"\n      });\n    }\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Nofication, {\n    type: notification.type,\n    text: notification.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Budget App\"), React.createElement(\"main\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(BudgetForm, {\n    amount: amount,\n    charge: charge,\n    handleAmount: handleAmount,\n    handleCharge: handleCharge,\n    handleSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(BudgetList, {\n    expenses: expenses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Total spending :\", \" \", React.createElement(\"span\", {\n    className: \"total\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"$\", expenses.reduce((acc, curr) => {\n    return acc += parseInt(curr.amount);\n  }, 0))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/Preetee/Desktop/reactApp/MyBudget/mybudget/src/App.js"],"names":["React","useState","Nofication","BudgetForm","BudgetList","uuid","initialExpenses","id","charge","amount","App","expenses","setExpenses","setCharge","setAmount","notification","setNotification","show","handleAmount","e","target","value","handleCharge","handleSubmit","preventDefault","type","text","reduce","acc","curr","parseInt"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Nofication from './components/Notification';\nimport BudgetForm from './components/BudgetForm';\nimport BudgetList from './components/BudgetList';\nimport uuid from 'uuid/v4'\n\nconst initialExpenses = [\n  { id: uuid(), charge: 'rent', amount: 1000 },\n  { id: uuid(), charge: 'skySurf', amount: 1300 },\n  { id: uuid(), charge: 'diving', amount: 1000 }\n]\n\n\n\nfunction App()\n{\n  //useState is a function that take an intialValue and return an array with 2 values\n  //the action value of the state\n  //function to update/controle\n  //default valie\n  const [expenses, setExpenses] = useState(initialExpenses)\n  const [charge, setCharge] = useState('')\n  const [amount, setAmount] = useState('')\n  const [notification,setNotification]=useState({show:false})\n \n  \n  function handleAmount(e){\n    return setAmount(e.target.value)\n  }\n  \n  function handleCharge(e)\n  {\n      return setCharge(e.target.value)\n  \n  }\n\n  function handleSubmit(e)\n  {\n    e.preventDefault()\n   \n    if (charge != \"\" && amount > 0)\n    {\n      setExpenses([...expenses, { id: uuid(), charge, amount }])\n      setCharge(\"\")\n      setAmount(\"\")\n      setNotification({ show: true, type: \"success\", text: \"Expense was added\" })\n    }\n    else\n    {\n      setNotification({show:true,type:\"danger\",text:\"error\"})\n    }\n  }\n\n  return (\n    <>\n      <Nofication type={notification.type} text={notification.text} />\n      <h1>Budget App</h1>\n      <main className=\"App\">\n        <BudgetForm\n          amount={amount}\n          charge={charge}\n          handleAmount={handleAmount}\n          handleCharge={handleCharge}\n          handleSubmit={handleSubmit}\n           />\n        <BudgetList expenses={expenses} />\n      </main>\n      <h1>\n        Total spending :{\" \"}\n        <span className=\"total\">\n          ${expenses.reduce((acc, curr) =>\n          {\n            return acc += parseInt(curr.amount)\n          },0)}\n        </span>\n      </h1>\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}